# Buying and Selling Energy

To buy or sell energy, you'll need to interact with the Singularity contract on the Solana blockchain. Here's a step-by-step guide:

## Buying Energy

1. **Provision your Metabolizer account**: Send energy to your Metabolizer account using the `provision` instruction. This will reserve the energy for future transactions.
2. **Initialize a Transformer account**: Create a new Transformer account using the `transform` instruction. This will generate a unique address for your Transformer account.
3. **Deposit energy into the Singularity account**: Use the `provision` instruction to send energy from your Metabolizer account to the Singularity account.
4. **Consume energy**: Use the `consume` instruction to consume the energy provisioned in the Singularity account. This will generate tokens that can be used to purchase energy.

## Selling Energy

1. **Provision your Metabolizer account**: Send energy to your Metabolizer account using the `provision` instruction. This will reserve the energy for future transactions.
2. **Initialize a Transformer account**: Create a new Transformer account using the `transform` instruction. This will generate a unique address for your Transformer account.
3. **Deposit energy into the Singularity account**: Use the `provision` instruction to send energy from your Metabolizer account to the Singularity account.
4. **Withdraw energy profit**: Use the `withdraw` instruction to withdraw the energy profit from the Singularity account.

## Intrinsic Value of Energy

Energy has intrinsic value because it represents a unit of computational power that can be used to generate tokens. The value of energy is tied to the value of the tokens it can generate, which is determined by the demand for those tokens.

In other words, energy has value because it can be used to create something of value (tokens). The more valuable the tokens, the more valuable the energy.

Additionally, energy has a limited supply, which helps to maintain its value over time. As more users interact with the Singularity contract, the demand for energy will increase, driving up its value.

## Example Use Case

Suppose you want to buy 100 units of energy to generate tokens. You would:

1. Provision your Metabolizer account with 100 units of energy.
2. Initialize a Transformer account.
3. Deposit the 100 units of energy into the Singularity account.
4. Consume the energy provisioned in the Singularity account to generate tokens.

The tokens generated can then be used to purchase goods or services, or sold on the open market for other cryptocurrencies.

Remember to always follow the instructions carefully and ensure you have enough energy provisioned in your Metabolizer account to complete the transaction.

## Code Snippets

Here are some code snippets to illustrate the process:

```python
# Provision Metabolizer account
@instruction
def provision(
  metabolizer: Metabolizer,
  metabolizer_account: TokenAccount, 
  singularity_account: TokenAccount,
  metabolizer_signer: Signer,
  n: u64
  ):
  # Metabolizer sends the energy provision to the Singularity account
  metabolizer_account.transfer(
    authority = metabolizer_signer,
    to = singularity_account,
    amount = u64(n)
  )
  metabolizer.reserve += n

# Consume energy provision
@instruction
def consume(
  signer: Signer,
  mint: TokenMint,
  transformer_account: TokenAccount,
  metabolizer_account: TokenAccount,
  singularity_account: TokenAccount, 
  singularity: Singularity,
  n: u64,
  transformer: Transformer,
  metabolizer: Metabolizer,
  clock: Clock
  ):
  # Update amount of token generated by the transformer
  transformer.vec_unit_gen += n
  # Update the reserved amount of energy provisioned by the metabolizer
  metabolizer.reserve -= n
  
  # Update stats of the Singularity account
  singularity.bump_query += 1
  singularity.bump_token += n
  singularity.profit += n * singularity.fee // 100
  
  # Send part of the provision for the generated tokens
  amount = (n * (100 - singularity.fee) // 100)  
  singularity_account.transfer(
    authority = signer,
    to = transformer_account,
    amount = amount,
    signer = ['energy-conversion', mint, transformer_account, clock.unix_timestamp()]
  )
```

These code snippets demonstrate how to provision your Metabolizer account, consume energy provision, and generate tokens using the Singularity contract.
